<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label13.Text" xml:space="preserve">
    <value>6-10 پیش فروشنده مکلف به بیمه نمودن کارگران و کارکنان در قبال حوادث کارگاهی بوده و در صورت ایراد خسارت، مکلف به جبران آن خواهد بود. بدیهی است پیش خریدار در مورد خسارت ناشی از این بند، هیچ گونه مسئولیتی ندارد.</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>6-9 پیش فروشنده مکلف است در صورت تخلف و تاخیر در در اجرای هریک از تعهدات تنظیم سند رسمی و تحویل مورد معامله، به ازای هر روز مبلغ خسارت در اجرای تعهد در وجه طرف مقابل را بپردازد. این خسارت مانع از الزام متعهد به انجام تعهد اصلی نمی باشد.</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>6-8 این قرارداد پیش فروشنده را از هرگونه انتقال مورد معامله به هرعنوان به غیر پیش خریدار منع می کند. درصورت تخلف و انتقال به غیر، به عنوان فروش مال غیر تلقی شده و پیش فروشنده مکلف است علاوه بر انجام اصل تعهد، نسبت به جبران کلیه خسارات وارده به خریدار، اقدام  نماید.</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>6-7 درصورت انتقال حقوق و تعهدات پیش خریدار نسبت به ساختمان پیش فروش شده بدون رضایت پیش فروشنده، پیش خریدار و منتقل الیه به طور تضامنی عهده دار پرداخت ثمن خواهند بود. در هرحال سند رسمی انتقال به نام منتقل الیه تنظیم خواهد شد.</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>6-4 چنانچه معلوم شود ضوابط قانونی در احداث بنا رعایت نشده و یا ساختمان با اوصاف قراردادی منطبق نبوده یا دارای هرگونه عیب اعم از مخفی و آشکار است، پیش خریدار می تواند الزام پیش فروشنده را به رفع نواقص و انطباق آن یا اوصاف قانونی یا قراردادی درخواست و درصورت ممتنع بودن, علاوه بر جبران خسارت قانونی، پیش خریدار میتواند مبلغ عدم تطبیق تعهد با توافق را دریافت کند.</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>6-2 پیش فروشنده مکلف است کلیه ضوابط، مقررات، نظامات دولتی و آیین نامه های مربوطه از قبل از اخذ پروانه ساختمانی، تراکم، پایان کار، تسویه حساب های بانکی و به طور کلی، هرگونه اقدام مقتضی را تا تنظیم سند رسمی به نام پیش خریدار، رعایت و به مورد اجرا گذارد.</value>
  </data>
</root>