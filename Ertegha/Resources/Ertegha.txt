IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Cities_States]') AND parent_object_id = OBJECT_ID(N'[dbo].[Cities]'))
ALTER TABLE [dbo].[Cities]  WITH CHECK ADD  CONSTRAINT [FK_Cities_States] FOREIGN KEY([StateGuid])
REFERENCES [dbo].[States] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Regions_States]') AND parent_object_id = OBJECT_ID(N'[dbo].[Regions]'))
ALTER TABLE [dbo].[Regions]  WITH CHECK ADD  CONSTRAINT [FK_Regions_States] FOREIGN KEY([CityGuid])
REFERENCES [dbo].[Cities] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Buildings_Peoples]') AND parent_object_id = OBJECT_ID(N'[dbo].[Buildings]'))
ALTER TABLE [dbo].[Buildings]  WITH CHECK ADD  CONSTRAINT [FK_Buildings_Peoples] FOREIGN KEY([OwnerGuid])
REFERENCES [dbo].[Peoples] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Buildings_Users]') AND parent_object_id = OBJECT_ID(N'[dbo].[Buildings]'))
ALTER TABLE [dbo].[Buildings]  WITH CHECK ADD  CONSTRAINT [FK_Buildings_Users] FOREIGN KEY([UserGuid])
REFERENCES [dbo].[Users] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Buildings_Cities]') AND parent_object_id = OBJECT_ID(N'[dbo].[Buildings]'))
ALTER TABLE [dbo].[Buildings]  WITH CHECK ADD  CONSTRAINT [FK_Buildings_Cities] FOREIGN KEY([CityGuid])
REFERENCES [dbo].[Cities] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Buildings_Regions]') AND parent_object_id = OBJECT_ID(N'[dbo].[Buildings]'))
ALTER TABLE [dbo].[Buildings]  WITH CHECK ADD  CONSTRAINT [FK_Buildings_Regions] FOREIGN KEY([RegionGuid])
REFERENCES [dbo].[Regions] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Buildings_BuildingType]') AND parent_object_id = OBJECT_ID(N'[dbo].[Buildings]'))
ALTER TABLE [dbo].[Buildings]  WITH CHECK ADD  CONSTRAINT [FK_Buildings_BuildingType] FOREIGN KEY([BuildingTypeGuid])
REFERENCES [dbo].[BuildingTypes] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Buildings_BuildingAccountType]') AND parent_object_id = OBJECT_ID(N'[dbo].[Buildings]'))
ALTER TABLE [dbo].[Buildings]  WITH CHECK ADD  CONSTRAINT [FK_Buildings_BuildingAccountType] FOREIGN KEY([BuildingAccountTypeGuid])
REFERENCES [dbo].[BuildingAccountTypes] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Buildings_BuildingView]') AND parent_object_id = OBJECT_ID(N'[dbo].[Buildings]'))
ALTER TABLE [dbo].[Buildings]  WITH CHECK ADD  CONSTRAINT [FK_Buildings_BuildingView] FOREIGN KEY([BuildingViewGuid])
REFERENCES [dbo].[BuildingViews] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Buildings_FloorCover]') AND parent_object_id = OBJECT_ID(N'[dbo].[Buildings]'))
ALTER TABLE [dbo].[Buildings]  WITH CHECK ADD  CONSTRAINT [FK_Buildings_FloorCover] FOREIGN KEY([FloorCoverGuid])
REFERENCES [dbo].[FloorCovers] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Buildings_KitchenService]') AND parent_object_id = OBJECT_ID(N'[dbo].[Buildings]'))
ALTER TABLE [dbo].[Buildings]  WITH CHECK ADD  CONSTRAINT [FK_Buildings_KitchenService] FOREIGN KEY([KitchenServiceGuid])
REFERENCES [dbo].[KitchenServices] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_BuildingsReq_Asker]') AND parent_object_id = OBJECT_ID(N'[dbo].[BuildingRequests]'))
ALTER TABLE [dbo].[BuildingRequests]  WITH CHECK ADD  CONSTRAINT [FK_BuildingsReq_Asker] FOREIGN KEY([AskerGuid])
REFERENCES [dbo].[Peoples] ([Guid])
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_BuildingsReq_User]') AND parent_object_id = OBJECT_ID(N'[dbo].[BuildingRequests]'))
ALTER TABLE [dbo].[BuildingRequests]  WITH CHECK ADD  CONSTRAINT [FK_BuildingsReq_User] FOREIGN KEY([UserGuid])
REFERENCES [dbo].[Users] ([Guid])
GO

-- ==========================================================================================
IF Not EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[sp_Cities_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	exec('Create Procedure [dbo].[sp_Cities_SelectAll]	As Begin print 11 end')
GO

ALTER PROCEDURE [dbo].[sp_Cities_SelectAll] 
AS
BEGIN
	select Cities.*,States.Name As StateName
	from Cities inner join States 
	on Cities.StateGuid=States.Guid
	order by StateName, Cities.Name
END
GO
-- ==========================================================================================
IF Not EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[sp_Regions_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	exec('Create Procedure [dbo].[sp_Regions_SelectAll]	As Begin print 11 end')
GO

ALTER PROCEDURE [dbo].[sp_Regions_SelectAll] 
AS
BEGIN
	select Regions.*,Cities.Name As CityName,States.Name As StateName
	from Regions left outer join Cities on Regions.CityGuid=Cities.Guid
	inner join States on Cities.StateGuid=States.Guid
	order by StateName,CityName
END
GO
-- ==========================================================================================
IF Not EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[sp_Regions_SelectAllByCityGuid]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	exec('Create Procedure [dbo].[sp_Regions_SelectAllByCityGuid]	As Begin print 11 end')
GO
ALTER PROCEDURE [dbo].[sp_Regions_SelectAllByCityGuid] 
	@cityGuid uniqueidentifier
AS
BEGIN
	select Regions.*,Cities.Name As CityName,States.Name As StateName
	from Regions inner join Cities on Regions.CityGuid=Cities.Guid
	inner join States on Cities.StateGuid=States.Guid
	where Regions.CityGuid=@cityGuid
	order by StateName,CityName
END
GO
-- ==========================================================================================
IF Not EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[sp_Cities_SelectAllByStateGuid]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	exec('Create Procedure [dbo].[sp_Cities_SelectAllByStateGuid]	As Begin print 11 end')
GO

ALTER PROCEDURE [dbo].[sp_Cities_SelectAllByStateGuid] 
	@stateGuid uniqueidentifier
AS
BEGIN
	select Cities.*,States.Name As StateName
	from Cities inner join States 
	on Cities.StateGuid=States.Guid
	where Cities.StateGuid=@stateGuid
	order by StateName, Cities.Name
END
GO
-- ==========================================================================================
IF Not EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[sp_Buildings_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	exec('Create Procedure [dbo].[sp_Buildings_SelectAll]	As Begin print 11 end')
GO

ALTER PROCEDURE [dbo].[sp_Buildings_SelectAll] 
AS
BEGIN
select [dbo].[Buildings].*,[dbo].[Peoples].Name As OwnerName,
       [dbo].[BuildingTypes].Name As BuildingTypeName,
	   [dbo].[Users].Name As UserName,
	   [dbo].[Regions].Name As RegionName,
	   [dbo].[RentalAuthorities].Name As RentalAuthorityName
From [dbo].[Buildings] 
     inner join [dbo].[Peoples] on [dbo].[Buildings].OwnerGuid=[dbo].[Peoples].Guid
	 inner join [dbo].[BuildingTypes] on [dbo].[Buildings].BuildingTypeGuid=[dbo].[BuildingTypes].Guid
	 inner join [dbo].[Users] on [dbo].[Buildings].UserGuid=[dbo].[Users].Guid
	 inner join [dbo].[Regions] on [dbo].[Buildings].RegionGuid=[dbo].[Regions].Guid
	 left outer join [dbo].[RentalAuthorities] on [dbo].[Buildings].RentalAutorityGuid=[dbo].[RentalAuthorities].Guid
End
GO
-- ==========================================================================================
IF Not EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[sp_BuildingsReq_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	exec('Create Procedure [dbo].[sp_BuildingsReq_SelectAll]	As Begin print 11 end')
GO

ALTER PROCEDURE [dbo].[sp_BuildingsReq_SelectAll] 
AS
BEGIN
select [dbo].[BuildingRequests].*,[dbo].[Peoples].Name As AskerName,
	   [dbo].[Users].Name As UserName
	   From [dbo].[BuildingRequests] 
	   inner join [dbo].[Peoples] on [dbo].[BuildingRequests].AskerGuid=[dbo].[Peoples].Guid
	   inner join [dbo].[Users] on [dbo].[BuildingRequests].UserGuid=[dbo].[Users].Guid
End
