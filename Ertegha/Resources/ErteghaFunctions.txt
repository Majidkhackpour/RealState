	CREATE OR ALTER FUNCTION [dbo].[MMod] (@numerator bigint, @denominator bigint)
	RETURNS bigint AS  
	BEGIN 
	 RETURN ((@numerator % @denominator) + @denominator) % 
	@denominator
	END
	GO


	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Ceil]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	BEGIN
	execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[Ceil](@number float)
	RETURNS bigint AS  
	BEGIN 
	RETURN CASE SIGN(@number) WHEN -1 THEN CEILING(@number) - 1 
	ELSE CEILING(@number) END
	END
	' 
	END

	GO

/****** Object:  UserDefinedFunction [dbo].[persian_jdn]    Script Date: 08/22/2015 06:52:11 ب.ظ ******/
	SET ANSI_NULLS ON
	GO
	SET QUOTED_IDENTIFIER ON
	GO
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[persian_jdn]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	BEGIN
	execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[persian_jdn](@iYear bigint, @iMonth int, @iDay int)
	RETURNS bigint AS  
	BEGIN 
	DECLARE @PERSIAN_EPOCH bigint
	SET @PERSIAN_EPOCH = 1948321 -- The JDN of 1 Farvardin 1
	DECLARE @epbase bigint
	DECLARE @epyear bigint
	DECLARE @mdays bigint
	DECLARE @temp bigint
	IF @iYear >= 0
	 SET @epbase = @iYear - 474
	ELSE
	 SET @epbase = @iYear - 473
	 
	SET @epyear = 474 + dbo.MMod(@epbase, 2820)
	IF @iMonth <= 7
	 SET @mdays = (@iMonth - 1) * 31
	ELSE
	 SET @mdays = (@iMonth - 1) * 30 + 6
	 
	SET @temp = @iDay + @mdays + CAST(((@epbase / 2820) * 1029983 + 
	(@PERSIAN_EPOCH - 1)) AS bigint)
	RETURN @temp + CAST(((((@epyear * 682) - 110) / 2816) + (@epyear - 1) * 
	365) AS bigint)
	END
	' 
	END

	GO

/****** Object:  UserDefinedFunction [dbo].[jdn_persian]    Script Date: 08/22/2015 06:52:11 ب.ظ ******/
	SET ANSI_NULLS ON
	GO
	SET QUOTED_IDENTIFIER ON
	GO
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[jdn_persian]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	BEGIN
	execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[jdn_persian](@jdn bigint)
	RETURNS char(10) AS  
	BEGIN 
	DECLARE @depoch bigint
	DECLARE @cycle int
	DECLARE @cyear bigint
	DECLARE @ycycle int
	DECLARE @aux1 int, @aux2 int
	DECLARE @yday int
	DECLARE @iYear bigint, @iMonth int, @iDay int
	DECLARE @tmpMonth char(2),@tmpDay char(2)
	SET @depoch = @jdn - dbo.persian_jdn(475, 1, 1)
	SET @cycle = CAST((@depoch / 1029983) AS int)
	SET @cyear = dbo.MMod(@depoch, 1029983)
	IF @cyear = 1029982
	 SET @ycycle = 2820
	ELSE
	BEGIN
	 SET @aux1 = CAST((@cyear / 366) AS int)
	 SET @aux2 = dbo.MMod(@cyear, 366)
	 SET @ycycle = CAST(((((2134 * @aux1) + (2816 * @aux2) + 
	2815) / 1028522)) AS int) + @aux1 + 1
	END
	SET @iYear = @ycycle + (2820 * @cycle) + 474
	IF @iYear <= 0
	 SET @iYear = @iYear - 1
	SET @yday = (@jdn - dbo.persian_jdn(@iYear, 1, 1)) + 1
	IF @yday <= 186
	 SET @iMonth = dbo.Ceil(CAST(@yday AS float)/ 31)
	ELSE
	 SET @iMonth = dbo.Ceil(CAST((@yday - 6) AS float)/ 30)
	SET @iDay = (@jdn - dbo.persian_jdn(@iYear, @iMonth, 1)) + 1
	IF @iMonth < 10 
	 SET @tmpMonth= N''0''+ CAST( @iMonth as char(2))
	ELSE
	 SET @tmpMonth =CAST( @iMonth as char(2))
	IF @iDay < 10 
	 SET @tmpDay= N''0''+ CAST( @iDay as char(2))
	ELSE
	 SET @tmpDay =CAST( @iDay as char(2))
	RETURN CAST(@iYear AS char(4)) + N''/'' + @tmpMonth   + N''/'' + @tmpDay
	END
	' 
	END
	GO








/****** Object:  UserDefinedFunction [dbo].[Civil2Persian]    Script Date: 08/22/2015 06:52:11 ب.ظ ******/
	SET ANSI_NULLS ON
	GO
	SET QUOTED_IDENTIFIER ON
	GO
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Civil2Persian]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	BEGIN
	execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[Civil2Persian](@CivilDate datetime)
	RETURNS char(10) AS
	BEGIN

	IF @CivilDate=null
	BEGIN
	  RETURN '' ''
	END 

	if @CivilDate>''3000/01/01'' or @CivilDate<''1980/01/01''
		return ''          ''

	set @civildate=str(year(@civildate)) + ''/'' + str(month(@civildate)) + ''/'' + str(day(@civildate))
	--return @civildate

	RETURN dbo.jdn_persian(CAST(@CivilDate  as bigint)+2415021)
	--RETURN dbo.jdn_persian(dbo.civil_jdn(@year, @month, @day))
	END
	' 
	END