using EntityCache.Core;
using EntityCache.SqlServerPersistence;
using Persistence;
using Persistence.Model;

namespace EntityCache.Assistence
{
    public static class UnitOfWork
    {
        private static readonly ModelContext db = new ModelContext(Cache.ConnectionString);

        private static IUsersRepository _usersRepository;
        private static IStatesRepository _statesRepository;
        private static ICitiesRepository _citiesRepository;
        private static IRegionsRepository _regionsRepository;
        private static INaqzRepository _naqzRepository;
        private static IBuildingOptionRepository _buildingOptionRepository;
        private static IBuildingAccountTypeRepository _buildingAccountTypeRepository;
        private static IFloorCoverRepository _floorCoverRepository;
        private static IKitchenServiceRepository _kitchenServiceRepository;
        private static IDocumentTypeRepository _documentTypeRepository;
        private static IRentalAuthorityRepository _rentalAuthorityRepository;
        private static IBuildingViewRepository _buildingViewRepository;
        private static IBuildingConditionRepository _buildingConditionRepository;
        private static ISettingsRepository _settingsRepository;
        private static IBuildingTypeRepository _buildingTypeRepository;
        private static IPeopleGroupRepository _peopleGroupRepository;
        private static IPeoplesRepository _peopleRepository;
        private static IPhoneBookRepository _phoneBookRepository;
        private static ISmsPanelsRepository _smsPanelsRepository;
        private static ISimcardRepository _simcardRepository;
        private static IAdvertiseLogRepository _advertiseLogRepository;
        private static IBuildingRepository _buildingRepository;
        private static IBuildingRequestRepository _buildingRequestRepository;
        private static IContractRepository _contractRepository;
        private static IUserLogRepository _userLogRepository;
        private static ISmsLogRepository _smsLogRepository;
        private static INoteRepository _noteRepository;
        private static ISerializedDataRepository _serDataRepository;
        private static IAdvertiseRelatedRegionRepository _advertiseRelatedRegionRepository;
        private static IAdvTokensRepository _advTokenRepository;
        private static IBackUpLogRepository _bkLogRepository;
        private static IFileInfoRepository _fileInfoRepository;
        private static IKolRepository _kolRepository;
        private static IMoeinRepository _moeinRepository;
        private static ITafsilRepository _tafsilRepository;
        private static IBankRepository _bankRepository;
        private static IDasteCheckRepository _dasteCheckRepository;
        private static ICheckPageRepository _checkPageRepository;
        private static IsanadRepository _sanadRepository;
        private static ISanadDetailRepository _sanadDetailRepository;
        private static IReceptionRepository _receptionRepository;
        private static IReceptionCheckRepository _receptionCheckRepository;
        private static IBankSegestRepository _bankSegestRepository;
        private static IPardakhtRepository _pardakhtRepository;
        private static IPardakhtCheckShakhsiRepository _pardakhtCheckShakhsiRepository;
        private static IReceptionCheckAvalDoreRepository _receptionCheckAvalDoreRepository;
        private static IPardakhtCheckAvalDoreRepository _pardakhtCheckAvalDoreRepository;
        private static IAdvisorRepository _advisorRepository;
        private static IAdjectiveDescriptionRepository _adjectiveDescriptionRepository;
        private static IWorkingRangeRepository _workingRangeRepository;
        private static IBuildingRelatedNumberRepository _buildingRelatedNumberRepository;
        private static IBuildingWindowRepository _buildingWindowRepository;

        public static void Dispose() => db?.Dispose();
        public static void Set_Save() => db.SaveChanges();


        public static IUsersRepository Users => _usersRepository ?? (_usersRepository = new UsersPersistenceRepository());
        public static IStatesRepository States => _statesRepository ?? (_statesRepository = new StatesPersistenceRepository());
        public static ICitiesRepository Cities => _citiesRepository ?? (_citiesRepository = new CitiesPersistenceRepository());
        public static IRegionsRepository Regions => _regionsRepository ?? (_regionsRepository = new RegionsPersistenceRepository());
        public static INaqzRepository Naqz => _naqzRepository ?? (_naqzRepository = new NaqzPersistenceRepository());
        public static IBuildingOptionRepository BuildingOption => _buildingOptionRepository ?? (_buildingOptionRepository = new BuildingOptionPersistenceRepository());
        public static IBuildingAccountTypeRepository BuildingAccountType => _buildingAccountTypeRepository ?? (_buildingAccountTypeRepository = new BuildingAccountTypePersistenceRepository());
        public static IFloorCoverRepository FloorCover => _floorCoverRepository ?? (_floorCoverRepository = new FloorCoverPersistenceRepository());
        public static IKitchenServiceRepository KitchenService => _kitchenServiceRepository ?? (_kitchenServiceRepository = new KitchenServicePersistenceRepository());
        public static IDocumentTypeRepository DocumentType => _documentTypeRepository ?? (_documentTypeRepository = new DocumentTypePersistenceRepository());
        public static IRentalAuthorityRepository RentalAuthority => _rentalAuthorityRepository ?? (_rentalAuthorityRepository = new RentalAuthorityPersistenceRepository());
        public static IBuildingViewRepository BuildingView => _buildingViewRepository ?? (_buildingViewRepository = new BuildingViewPersistenceRepository());
        public static IBuildingConditionRepository BuildingCondition => _buildingConditionRepository ?? (_buildingConditionRepository = new BuildingConditionPersistenceRepository());
        public static ISettingsRepository Settings => _settingsRepository ?? (_settingsRepository = new SettingsPersistenceRepository());
        public static IBuildingTypeRepository BuildingType => _buildingTypeRepository ?? (_buildingTypeRepository = new BuildingTypePersistenceRepository());
        public static IPeopleGroupRepository PeopleGroup => _peopleGroupRepository ?? (_peopleGroupRepository = new PeopleGroupPersistenceRepository());
        public static IPeoplesRepository Peoples => _peopleRepository ?? (_peopleRepository = new PeoplesPersistenceRepository());
        public static IPhoneBookRepository PhoneBook => _phoneBookRepository ?? (_phoneBookRepository = new PhoneBookPersistenceRepository());
        public static ISmsPanelsRepository SmsPanels => _smsPanelsRepository ?? (_smsPanelsRepository = new SmsPanelsPersistenceRepository());
        public static ISimcardRepository Simcard => _simcardRepository ?? (_simcardRepository = new SimcardPersistenceRepository());
        public static IAdvertiseLogRepository AdvertiseLog => _advertiseLogRepository ?? (_advertiseLogRepository = new AdvertiseLogPersistenceRepository());
        public static IBuildingRepository Building => _buildingRepository ?? (_buildingRepository = new BuildingPersistenceRepository());
        public static IBuildingRequestRepository BuildingRequest => _buildingRequestRepository ?? (_buildingRequestRepository = new BuildingRequestPersistenceRepository());
        public static IContractRepository Contract => _contractRepository ?? (_contractRepository = new ContractPersistenceRepository());
        public static IUserLogRepository UserLog => _userLogRepository ?? (_userLogRepository = new UserLogPersistenceRepository());
        public static ISmsLogRepository SmsLog => _smsLogRepository ?? (_smsLogRepository = new SmsLogPersistenceRepository());
        public static INoteRepository Note => _noteRepository ?? (_noteRepository = new NotePersistenceRepository());
        public static ISerializedDataRepository SerializedData => _serDataRepository ?? (_serDataRepository = new SerializedDataPersistenceRepository());
        public static IAdvertiseRelatedRegionRepository AdvertiseRelatedRegion => _advertiseRelatedRegionRepository ?? (_advertiseRelatedRegionRepository = new AdvertiseRelatedRegionPersistenceRepository());
        public static IAdvTokensRepository AdvTokens => _advTokenRepository ?? (_advTokenRepository = new AdvTokensPersistenceRepository());
        public static IBackUpLogRepository BackUpLog => _bkLogRepository ?? (_bkLogRepository = new BackUpLogPersistenceRepository());
        public static IFileInfoRepository FileInfo => _fileInfoRepository ?? (_fileInfoRepository = new FileInfoPersistenceRepository());
        public static IKolRepository Kol => _kolRepository ?? (_kolRepository = new KolPersistenceRepository());
        public static IMoeinRepository Moein => _moeinRepository ?? (_moeinRepository = new MoeinPersistenceRepository());
        public static ITafsilRepository Tafsil => _tafsilRepository ?? (_tafsilRepository = new TafsilPersistenceRepository());
        public static IBankRepository Bank => _bankRepository ?? (_bankRepository = new BankPersistenceRepository());
        public static IDasteCheckRepository DasteCheck => _dasteCheckRepository ?? (_dasteCheckRepository = new DasteCheckPersistenceRepository());
        public static ICheckPageRepository CheckPage => _checkPageRepository ?? (_checkPageRepository = new CheckPagePersistenceRepository());
        public static IsanadRepository Sanad => _sanadRepository ?? (_sanadRepository = new SanadPersistenceRepository());
        public static ISanadDetailRepository SanadDetail => _sanadDetailRepository ?? (_sanadDetailRepository = new SanadDetailPersistenceRepository());
        public static IReceptionRepository Reception => _receptionRepository ?? (_receptionRepository = new ReceptionPersistenceRepository());
        public static IReceptionCheckRepository ReceptionCheck => _receptionCheckRepository ?? (_receptionCheckRepository = new ReceptionCheckPersistenceRepository());
        public static IBankSegestRepository BankSegest => _bankSegestRepository ?? (_bankSegestRepository = new BankSegestPersistenseRepository());
        public static IPardakhtRepository Pardakht => _pardakhtRepository ?? (_pardakhtRepository = new PardakhtPersistenceRepository());
        public static IPardakhtCheckShakhsiRepository PardakhtCheckShakhsi => _pardakhtCheckShakhsiRepository ?? (_pardakhtCheckShakhsiRepository = new PardakhtCheckShakhsiPersistenceRepository());
        public static IReceptionCheckAvalDoreRepository ReceptionCheckAvalDore => _receptionCheckAvalDoreRepository ?? (_receptionCheckAvalDoreRepository = new ReceptionCheckAvalDorePersistenceRepository());
        public static IPardakhtCheckAvalDoreRepository PardakhtCheckAvalDore => _pardakhtCheckAvalDoreRepository ?? (_pardakhtCheckAvalDoreRepository = new PardakhtCheckAvalDorePersistenceRepository());
        public static IAdvisorRepository Advisor => _advisorRepository ?? (_advisorRepository = new AdvisorPersistenceRepository());
        public static IAdjectiveDescriptionRepository AdjectiveDescription => _adjectiveDescriptionRepository ?? (_adjectiveDescriptionRepository = new AdjectiveDescriptionPersistenceRepository());
        public static IWorkingRangeRepository WorkingRange => _workingRangeRepository ?? (_workingRangeRepository = new WorkingRangePersistenceRepository());
        public static IBuildingRelatedNumberRepository BuildingRelatedNumber => _buildingRelatedNumberRepository ?? (_buildingRelatedNumberRepository = new BuildingRelatedNumberPersistenceRepository());
        public static IBuildingWindowRepository BuildingWindow => _buildingWindowRepository ?? (_buildingWindowRepository = new BuildingWindowPersistenceRepository());
    }
}
